// <auto-generated />
using System;
using FlightAPIs.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightAPIs.Migrations
{
    [DbContext(typeof(DbAbb296Kuphe1980Context))]
    [Migration("20250702155052_Demo1")]
    partial class Demo1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlightAPIs.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Cccd")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("cccd");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("phone_number");

                    b.Property<int>("UserType")
                        .HasColumnType("int")
                        .HasColumnName("user_type");

                    b.HasKey("Id")
                        .HasName("PK__Admin__3213E83F52636478");

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("FlightAPIs.Models.AggregatedCounter", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("datetime");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Key")
                        .HasName("PK_HangFire_CounterAggregated");

                    b.ToTable("AggregatedCounter", "HangFire");
                });

            modelBuilder.Entity("FlightAPIs.Models.AirPort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("AirPort", (string)null);
                });

            modelBuilder.Entity("FlightAPIs.Models.Baggage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarryonBag")
                        .HasColumnType("int")
                        .HasColumnName("carryon_bag");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("code")
                        .IsFixedLength();

                    b.Property<int>("SignedLuggage")
                        .HasColumnType("int")
                        .HasColumnName("signed_luggage");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Baggage__3213E83F3EBC3A8A");

                    b.HasIndex("UserId");

                    b.ToTable("Baggage", (string)null);
                });

            modelBuilder.Entity("FlightAPIs.Models.Counter", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("datetime");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Key", "Id")
                        .HasName("PK_HangFire_Counter");

                    b.ToTable("Counter", "HangFire");
                });

            modelBuilder.Entity("FlightAPIs.Models.FlightSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ArrivalsAt")
                        .HasColumnType("datetime")
                        .HasColumnName("arrivals_at");

                    b.Property<int?>("AvailableSeats")
                        .HasColumnType("int")
                        .HasColumnName("availableSeats");

                    b.Property<int?>("BookedSeats")
                        .HasColumnType("int")
                        .HasColumnName("bookedSeats");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<int>("Cost")
                        .HasColumnType("int")
                        .HasColumnName("cost");

                    b.Property<DateTime>("DeparturesAt")
                        .HasColumnType("datetime")
                        .HasColumnName("departures_at");

                    b.Property<int>("FromAirport")
                        .HasColumnType("int")
                        .HasColumnName("from_airport");

                    b.Property<int>("PlaneId")
                        .HasColumnType("int")
                        .HasColumnName("plane_id");

                    b.Property<string>("StatusFs")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_fs");

                    b.Property<int>("ToAirport")
                        .HasColumnType("int")
                        .HasColumnName("to_airport");

                    b.Property<int?>("TotalSeats")
                        .HasColumnType("int")
                        .HasColumnName("totalSeats");

                    b.HasKey("Id");

                    b.ToTable("FlightSchedules");
                });

            modelBuilder.Entity("FlightAPIs.Models.Hash", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Field")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key", "Field")
                        .HasName("PK_HangFire_Hash");

                    b.ToTable("Hash", "HangFire");
                });

            modelBuilder.Entity("FlightAPIs.Models.Job", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Arguments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("datetime");

                    b.Property<string>("InvocationData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<string>("StateName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK_HangFire_Job");

                    b.ToTable("Job", "HangFire");
                });

            modelBuilder.Entity("FlightAPIs.Models.JobParameter", b =>
                {
                    b.Property<long>("JobId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobId", "Name")
                        .HasName("PK_HangFire_JobParameter");

                    b.ToTable("JobParameter", "HangFire");
                });

            modelBuilder.Entity("FlightAPIs.Models.JobQueue", b =>
                {
                    b.Property<string>("Queue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("FetchedAt")
                        .HasColumnType("datetime");

                    b.Property<long>("JobId")
                        .HasColumnType("bigint");

                    b.HasKey("Queue", "Id")
                        .HasName("PK_HangFire_JobQueue");

                    b.ToTable("JobQueue", "HangFire");
                });

            modelBuilder.Entity("FlightAPIs.Models.List", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key", "Id")
                        .HasName("PK_HangFire_List");

                    b.ToTable("List", "HangFire");
                });

            modelBuilder.Entity("FlightAPIs.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailPayment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email_Payment");

                    b.Property<string>("NamePayment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name_Payment");

                    b.Property<string>("PayerIdPayment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PayerID_Payment");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK__Payments__3213E83F4822C229");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("FlightAPIs.Models.Plane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Plane", (string)null);
                });

            modelBuilder.Entity("FlightAPIs.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameRole")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name_role");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__Role__3213E83F03C0FCA5");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("FlightAPIs.Models.Schema", b =>
                {
                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Version")
                        .HasName("PK_HangFire_Schema");

                    b.ToTable("Schema", "HangFire");
                });

            modelBuilder.Entity("FlightAPIs.Models.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BookingExpiration")
                        .HasColumnType("datetime");

                    b.Property<int>("FlightSchedulesId")
                        .HasColumnType("int")
                        .HasColumnName("flight_schedules_id");

                    b.Property<int?>("Isbooked")
                        .HasColumnType("int")
                        .HasColumnName("isbooked");

                    b.Property<string>("Seat1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("seat");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id")
                        .HasName("PK__Seats__3213E83FB74D5565");

                    b.HasIndex("FlightSchedulesId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("FlightAPIs.Models.Server", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastHeartbeat")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_HangFire_Server");

                    b.ToTable("Server", "HangFire");
                });

            modelBuilder.Entity("FlightAPIs.Models.Set", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ExpireAt")
                        .HasColumnType("datetime");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.HasKey("Key", "Value")
                        .HasName("PK_HangFire_Set");

                    b.ToTable("Set", "HangFire");
                });

            modelBuilder.Entity("FlightAPIs.Models.State", b =>
                {
                    b.Property<long>("JobId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Reason")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("JobId", "Id")
                        .HasName("PK_HangFire_State");

                    b.ToTable("State", "HangFire");
                });

            modelBuilder.Entity("FlightAPIs.Models.TicketManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("code")
                        .IsFixedLength();

                    b.Property<int>("FlightSchedulesId")
                        .HasColumnType("int")
                        .HasColumnName("flight_schedules_id");

                    b.Property<int?>("PayId")
                        .HasColumnType("int")
                        .HasColumnName("pay_id");

                    b.Property<int?>("SeatLocation")
                        .HasColumnType("int")
                        .HasColumnName("seat_location");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("FlightSchedulesId");

                    b.HasIndex("UserId");

                    b.ToTable("TicketManager", (string)null);
                });

            modelBuilder.Entity("FlightAPIs.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Cccd")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("cccd");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("phone_number");

                    b.Property<int>("UserType")
                        .HasColumnType("int")
                        .HasColumnName("user_type");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("FlightAPIs.Models.Baggage", b =>
                {
                    b.HasOne("FlightAPIs.Models.User", "User")
                        .WithMany("Baggages")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Baggage_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FlightAPIs.Models.JobParameter", b =>
                {
                    b.HasOne("FlightAPIs.Models.Job", "Job")
                        .WithMany("JobParameters")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HangFire_JobParameter_Job");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("FlightAPIs.Models.Seat", b =>
                {
                    b.HasOne("FlightAPIs.Models.FlightSchedule", "FlightSchedules")
                        .WithMany("Seats")
                        .HasForeignKey("FlightSchedulesId")
                        .IsRequired()
                        .HasConstraintName("FK_Seats_FlightSchedules");

                    b.Navigation("FlightSchedules");
                });

            modelBuilder.Entity("FlightAPIs.Models.State", b =>
                {
                    b.HasOne("FlightAPIs.Models.Job", "Job")
                        .WithMany("States")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HangFire_State_Job");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("FlightAPIs.Models.TicketManager", b =>
                {
                    b.HasOne("FlightAPIs.Models.FlightSchedule", "FlightSchedules")
                        .WithMany("TicketManagers")
                        .HasForeignKey("FlightSchedulesId")
                        .IsRequired()
                        .HasConstraintName("FK_TicketManager_FlightSchedules");

                    b.HasOne("FlightAPIs.Models.User", "User")
                        .WithMany("TicketManagers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_TicketManager_User");

                    b.Navigation("FlightSchedules");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FlightAPIs.Models.FlightSchedule", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("TicketManagers");
                });

            modelBuilder.Entity("FlightAPIs.Models.Job", b =>
                {
                    b.Navigation("JobParameters");

                    b.Navigation("States");
                });

            modelBuilder.Entity("FlightAPIs.Models.User", b =>
                {
                    b.Navigation("Baggages");

                    b.Navigation("TicketManagers");
                });
#pragma warning restore 612, 618
        }
    }
}
